@page "/connect360"


<div class="w-100 mt-4 text-theme justify-content-center d-flex flex-column align-items-center">
    <Modal @ref="modal" title="Schedule text message" Size="ModalSize.Large" UseStaticBackdrop="false">
        <BodyTemplate>
            <div class="col-12 d-flex flex-nowrap">
                <div class="">
                    <RadzenFormField Text="Add Recepients" class="w-100">
                        <RadzenDropDownDataGrid AllowColumnResize="true" Style="" @ref="grid" Chips="true" AllowFiltering="false" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowClear="true" @bind-Value=@selectedRecepients
                                                Multiple="true" Data=@clients TextProperty="FirstNames" ValueProperty="Id">
                            <Columns>
                                <RadzenDropDownDataGridColumn Width="50px" Sortable="false">
                                    <HeaderTemplate>
                                        <RadzenCheckBox Disabled="@(!grid.AllowSelectAll)" TriState="false" TValue="bool" Value="@(clients.Any(c => selectedRecepients != null && selectedRecepients.Contains(c.Id)))" Change="@(args => selectedRecepients = args ? grid.View.Cast<Client>().Select(c => c.Id) : selectedRecepients = Enumerable.Empty<int>())" />
                                    </HeaderTemplate>
                                    <Template Context="data">
                                        <RadzenCheckBox TriState="false" Value="@(selectedRecepients != null && selectedRecepients.Contains(((Client) data).Id))" TValue="bool" Change=@(args => grid.SelectItem(data)) @onclick:stopPropagation />
                                    </Template>
                                </RadzenDropDownDataGridColumn>
                                <RadzenDropDownDataGridColumn Property="Id" Title="ID" Width="40px" />
                                <RadzenDropDownDataGridColumn Property="FullName" Title="Name" Width="160px" />
                                <RadzenDropDownDataGridColumn Property="Client.City" Title="City" Width="100px" />
                                <RadzenDropDownDataGridColumn Property="Client.Country" Title="Country" Width="100px" />
                            </Columns>
                        </RadzenDropDownDataGrid>
                    </RadzenFormField>
                </div>
                <div class="w-100">
                    <RadzenFormField class="w-100" Style="font-size:0.8em" Text="TextMessage" Variant="Variant.Outlined">
                        <RadzenTextArea Style="height: 7em;" @bind-Value="@message" />
                    </RadzenFormField>
                </div>
                <div class="w-100">
                    <RadzenFormField class="w-100" Text="Select Date">
                        <RadzenDatePicker @bind-Value=@date ShowTime="true" ShowSeconds="true" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="MM/dd/yyyy HH:mm" />
                    </RadzenFormField>
                </div>
            </div>
        </BodyTemplate>
        <FooterTemplate>
            <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
            <Button Class="px-4 ms-2" Color="ButtonColor.Primary">Confirm</Button>
        </FooterTemplate>
    </Modal>
    <Button Color="ButtonColor.Primary" @onclick="OnShowModalClick">Type a new Message and Schedule it</Button>
    <ConfirmDialog @ref="dialog" />
</div>

<section class="container mt-4">
    <div class="d-flex justify-content-between flex-wrap gap-3">
        <div class="p-4 message-box d-flex position-relative flex-column gap-3 col-12 col-sm-6" style="box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.1);">
            <Icon Class="edit-button" Name="IconName.PencilSquare" Style="position:absolute; top:0.7em; right:1.2em; font-size:1.1em"></Icon>
            <h5 class="fw-bold">Broadcast Message</h5>
            <p>Hie all, please be reminded to pay all your bills</p>
            <RadzenDatePicker @bind-Value=@date ShowTime="true" Disabled ShowSeconds="true" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="ddd d MMM HH:mm" />
            <Button Class="mt-3" Color="ButtonColor.Danger" @onclick="ShowConfirmationAsync"> Delete Message </Button>
        </div>
        <div class="p-4 message-box d-flex position-relative flex-column gap-3 col-12 col-sm-6" style="box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.1);">
            <Icon Class="edit-button" Name="IconName.PencilSquare" Style="position:absolute; top:0.7em; right:1.2em; font-size:1.1em"></Icon>
            <h5 class="fw-bold">Broadcast Message</h5>
            <p>Hie all, please be reminded to pay all your bills</p>
            <RadzenDatePicker @bind-Value=@date ShowTime="true" Disabled ShowSeconds="true" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="ddd d MMM HH:mm" />
            <Button Class="mt-3" Color="ButtonColor.Danger" @onclick="ShowConfirmationAsync"> Delete Message </Button>
        </div>
        <div class="p-4 message-box d-flex position-relative flex-column gap-3 col-12 col-sm-6" style="box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.1);">
            <Icon Class="edit-button" Name="IconName.PencilSquare" Style="position:absolute; top:0.7em; right:1.2em; font-size:1.1em"></Icon>
            <h5 class="fw-bold">Broadcast Message</h5>
            <p>Hie all, please be reminded to pay all your bills</p>
            <RadzenDatePicker @bind-Value=@date ShowTime="true" Disabled ShowSeconds="true" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="ddd d MMM HH:mm" />
            <Button Class="mt-3" Color="ButtonColor.Danger" @onclick="ShowConfirmationAsync"> Delete Message </Button>
        </div>
        <div class="p-4 message-box d-flex position-relative flex-column gap-3 col-12 col-sm-6" style="box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.1);">
            <Icon Class="edit-button" Name="IconName.PencilSquare" Style="position:absolute; top:0.7em; right:1.2em; font-size:1.1em"></Icon>
            <h5 class="fw-bold">Broadcast Message</h5>
            <p>Hie all, please be reminded to pay all your bills</p>
            <RadzenDatePicker @bind-Value=@date ShowTime="true" Disabled ShowSeconds="true" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="ddd d MMM HH:mm" />
            <Button Class="mt-3" Color="ButtonColor.Danger" @onclick="ShowConfirmationAsync"> Delete Message </Button>
        </div>
        <div class="p-4 message-box d-flex position-relative flex-column gap-3 col-12 col-sm-6" style="box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.1);">
            <Icon Class="edit-button" Name="IconName.PencilSquare" Style="position:absolute; top:0.7em; right:1.2em; font-size:1.1em"></Icon>
            <h5 class="fw-bold">Broadcast Message</h5>
            <p>Hie all, please be reminded to pay all your bills</p>
            <RadzenDatePicker @bind-Value=@date ShowTime="true" Disabled ShowSeconds="true" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="ddd d MMM HH:mm" />
            <Button Class="mt-3" Color="ButtonColor.Danger" @onclick="ShowConfirmationAsync"> Delete Message </Button>
        </div>
    </div>
</section>

@code {
    string value = "Around the Horn";
    IEnumerable<string> companyNames = new List<string>()
    {
        "John Sthatham",
        "John Meinert",
        "John Meinert",
        "John Meinert",
        "John Meinert",
        "John Meinert",
        "John Meinert",
        "John Meinert",
        "John Meinert",
        "John Meinert"
    };
    RadzenDropDownDataGrid<IEnumerable<int>> grid;
    IEnumerable<Client> clients = new List<Client>
    {
        new Client() { Id= 1, FirstNames = "Gerhardus", LastName = "Gaoseb", FullName = "Gerhardus Gaoseb", TitleOfCourtesy = "Mr", CurrentCompany = "Ikanga Legal Practitioners", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 2, FirstNames = "Bra", LastName = "G", FullName = "Bra G", TitleOfCourtesy = "Mr", CurrentCompany = "Facebook.com", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 3, FirstNames = "Jean", LastName = "Claude", FullName = "Jean Claude", TitleOfCourtesy = "Mrs", CurrentCompany = "Exodus Legal Practitioners", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 4, FirstNames = "Hans", LastName = "Detriecht", FullName = "Hans Detriecht", TitleOfCourtesy = "Mr", CurrentCompany = "Shoprite", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 5, FirstNames = "Payet", LastName = "Dimitry", FullName = "Payet Dimitry", TitleOfCourtesy = "Mrs", CurrentCompany = "Legal Wise", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 6, FirstNames = "Maritjie", LastName = "HR", FullName = "Maritjie HR", TitleOfCourtesy = "Mr", CurrentCompany = "Ikanga Legal Practitioners", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 7, FirstNames = "Trent", LastName = "Arnold", FullName = "Trent Arnold", TitleOfCourtesy = "Mrs", CurrentCompany = "Telecom Namibia", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 8, FirstNames = "Phillipe", LastName = "Coutinho", FullName = "Phillipe Coutinho", TitleOfCourtesy = "Mr", CurrentCompany = "Ikanga Legal Practitioners", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 9, FirstNames = "William", LastName = "Carvalho", FullName = "William Carvalho", TitleOfCourtesy = "Mrs", CurrentCompany = "Microsoft", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 10, FirstNames = "Cristiano", LastName = "Ronaldo", FullName = "Critiano Ronaldo", TitleOfCourtesy = "Mr", CurrentCompany = "Ikanga Legal Practitioners", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 11, FirstNames = "Matheus", LastName = "Louthaus", FullName = "Matheus Louthaus", TitleOfCourtesy = "Mr", CurrentCompany = "Google", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"},
        new Client() { Id= 12, FirstNames = "Marius", LastName = "Bloodstan", FullName = "Marius Boodstan", TitleOfCourtesy = "Mrs", CurrentCompany = "Ikanga Legal Practitioners", City = "Windhoek", Country = "Namibia", Email = "jknox@gmail.com"}
    };

    private IEnumerable<int>? selectedRecepients = new int[] { };
    PreloadService PreloadService = new PreloadService();
    DateTime? date = DateTime.Now;
    string message = "";
    private Modal modal;

    private async Task SaveMessage()
    {
        
    }

    private async Task OnShowModalClick()
    {
        await modal?.ShowAsync();
    }
    private async Task OnHideModalClick()
    {
        await modal?.HideAsync();
    }

    List<BroadcastTextMessage> broadcastTextMessages = new List<BroadcastTextMessage>
    {
        new BroadcastTextMessage{ Id= 1, CellNumbers = new List<int>{}, Message = "Heyy there", date = DateTime.Now},
        new BroadcastTextMessage{ Id= 2, CellNumbers = new List<int>{}, Message = "Heyy there", date = DateTime.Now},
        new BroadcastTextMessage{ Id= 3, CellNumbers = new List<int>{}, Message = "Heyy there", date = DateTime.Now},
    };
    private ConfirmDialog dialog;

    private async Task ShowConfirmationAsync()
    {
        var confirmation = await dialog.ShowAsync(
            title: "Are you sure you want to delete this?",
            message1: "This will delete the record. Once deleted can not be rolled back.",
            message2: "Do you want to proceed?");

        if (confirmation)
        {
            await ShowSpinnerAsync(SpinnerColor.Success);
        }
        else
        {
            await ShowSpinnerAsync(SpinnerColor.Success);
        }
    }
    private async Task ShowSpinnerAsync(SpinnerColor spinnerColor)
    {
        PreloadService.Show(spinnerColor);

        await Task.Delay(3000); // call the service/api

        PreloadService.Hide();
    }
}