@inherits LayoutComponentBase
@inject DialogService DialogService


<div class="d-flex flex-column p-0" style="background-color: rgba(0,0,20,1); color: rgba(230,230,255,1); position: fixed; height: 60px; overflow:hidden; width: 100%; top: 0; left: 0">
    <div class="d-flex h-100 p-0 align-items-center justify-content-between fw-bold w-100" style="background-color: rgba(120,120,255,0.3);">
        <div class="d-flex gap-4 w-100 p-0 m-0 h-100 align-items-center">
            <a href="/" class="d-flex text-decoration-none align-items-center gap-2 p-0 justify-content-center" style="width:4.2%; border-right: 2px solid rgba(10,5,40,0.1); border-left: 2px solid rgba(10,5,40,0.1)">
                <Icon class="m-0 p-0 px-1 off-white" Name="IconName.Grid" Size="IconSize.x3"></Icon>
            </a>
            <a class="p-0 m-0 off-white text-decoration-none fs-5">Ikanga Legal Practitioners</a>
        </div>
        <div class="d-flex me-4 gap-3 align-items-center">




        </div>
    </div>
</div>
<div class="d-flex flex-row bg-image" style="height: calc(100vh - 60px); width: 100%; position: fixed; bottom: 0; left: 0">
    <div class="off-white" style="background-color: rgba(10,5,40,1); width: 4%">
        <NavMenu />
    </div>
    <main class="off-white" style="background-color: rgba(10,5,40,0.1);">
        @Body
    </main>
</div>
@*<div class="bb-page">


    <main>
        <div class="col-12 d-flex">
            <div class="sidebar col-2">
                <NavMenu />
            </div>
            <article class="px-4 col-10">
                <div class="py-2">
                    @Body
                </div>
            </article>        
        </div>

    </main>
</div>*@


<div class="w-100 h-100 d-flex justify-content-center">
    <Modal Class="text-dark h-100" @ref="modal" title="Settings" Style="height: 800px" Size="ModalSize.ExtraLarge" UseStaticBackdrop="true">
    <BodyTemplate>
        <Settings></Settings>
    </BodyTemplate>
    </Modal>
</div>

        

@code {


    private BlazorBootstrap.Modal modal = default!;

    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }





    int orderID = 10248;

    async Task ShowInlineDialog()
    {
        var result = await DialogService.OpenAsync("Simple Dialog", ds =>
    @<RadzenStack Gap="1.5rem">
        <p>Confirm Order ID <b>@orderID</b>?</p>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
            <RadzenStack Orientation="Orientation.Horizontal">
                <RadzenButton Text="Ok" Click="() => ds.Close(true)" Style="width: 80px;" />
                <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" />
            </RadzenStack>
            <RadzenButton Text="Refresh" Click="(() => { orderID = 10249; ds.Refresh(); })" ButtonStyle="ButtonStyle.Light" />
        </RadzenStack>
    </RadzenStack>);
    }





























    IEnumerable<String> titleList = new List<string>()
    {
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
        "Mr", "Mrs", "Other",
    };

}