@inject DialogService DialogService

<div class="d-flex flex-column justify-content-start position-relative align-items-center" style="width: 15em; z-index: 10">
    <RadzenMenu Style="background-color:transparent; border: 1px solid white; border-radius: 3px;">
        <RadzenMenuItem Text="Open New File" Icon="payment">
            <RadzenMenuItem Text="For an Existing Client" Click="ShowDialogWithCustomCssClasses" Icon="check_circle"></RadzenMenuItem>
            <RadzenMenuItem Text="For a New Client" Click="OnShowModalClick" Icon="input"></RadzenMenuItem>
        </RadzenMenuItem>
    </RadzenMenu>
</div>

<div class="w-100 h-100 d-flex justify-content-center">
    <Modal Class="text-dark h-100" @ref="modal" title="Open New File (New Client)" Style="height: 800px" Size="ModalSize.ExtraLarge" UseStaticBackdrop="true">
        <BodyTemplate>
            <NewFileNewClient></NewFileNewClient>
        </BodyTemplate>
    </Modal>
</div>

<div class="w-100 h-100 d-flex justify-content-center">
    <Modal Class="text-dark h-100" @ref="modal2" title="Open New File (Existing Client)" Style="height: 800px" Size="ModalSize.ExtraLarge" UseStaticBackdrop="true">
        <BodyTemplate>
            <NewFileExistingClient></NewFileExistingClient>
        </BodyTemplate>
    </Modal>
</div>

@code{

    async Task ShowDialogWithCustomCssClasses()
    {
        await DialogService.OpenAsync("Open New File (Existing Client)", ds =>
    @<div class="" style="width: 900px;">
        <NewFileExistingClient></NewFileExistingClient>
    </div>, new DialogOptions()
          {
              CssClass = "custom-dialog-class w-auto",
              WrapperCssClass = "custom-dialog-wrapper-class"
          });
    }
    private bool isToggled = false;
    private string toggleVisibility = "d-none";

    public void toggle()
    {
        isToggled = (isToggled == true) ? false : true;
        toggleVisibility = (isToggled) ? "d-none" : "d-block";
    }

    private BlazorBootstrap.Modal modal = default!;

    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }

    private BlazorBootstrap.Modal modal2 = default!;

    private async Task OnShowModalClick2()
    {
        await modal2.ShowAsync();
    }

    private async Task OnHideModalClick2()
    {
        await modal2.HideAsync();
    }
}